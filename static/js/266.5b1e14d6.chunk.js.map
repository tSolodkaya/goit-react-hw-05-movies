{"version":3,"file":"static/js/266.5b1e14d6.chunk.js","mappings":"kLACA,EAAgC,kCAAhC,EAA8E,8B,SCsB9E,EApBkB,SAAC,GAAyB,IAAvBA,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC1B,OACE,eAAIC,UAAWC,EAAf,UACE,SAAC,KAAD,CACEC,GACyB,YAAvBH,EAASI,UAAT,UACOL,EAAMM,IADb,kBAEeN,EAAMM,IAEvBC,MAAO,CAAEC,KAAMP,GANjB,UAQE,eAAGC,UAAWC,EAAd,UACGH,EAAMS,gBACP,wCAAgBT,EAAMU,sBAK/B,ECpBD,EAA4B,8BCY5B,EAVmB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQV,EAAe,EAAfA,SAC5B,OACE,eAAIC,UAAWC,EAAf,SACGQ,EAAOC,KAAI,SAAAZ,GAAK,OACf,SAAC,EAAD,CAA0BA,MAAOA,EAAOC,SAAUA,GAAlCD,EAAMM,GADP,KAKtB,C,gGCqBD,UA1Ba,WACX,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOF,EAAP,KAAeG,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KACMf,GAAWgB,EAAAA,EAAAA,MAcjB,OAZAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,oBAEGC,MAAK,SAAAC,GACJ,OAA4B,IAAxBA,EAAKC,QAAQC,OACRC,QAAQC,OAAO,IAAIC,MAAJ,8BAEjBZ,GAAU,OAAIO,EAAKC,SAC3B,IACAK,OAAM,SAAAZ,GAAK,OAAIC,EAASD,EAAMa,QAAnB,GACf,GAAE,KAGD,iCACE,gDACA,SAAC,IAAD,CAAYjB,OAAQA,EAAQV,SAAUA,IACrCc,IAAS,yBAAMA,MAGrB,C,oBC9BD,IAAMc,EAAM,mCACNC,EAAW,gCAuDXC,EAAM,CACVC,kBArDwB,WACxB,OAAOC,MAAM,0DAAD,OACgDJ,IAC1DT,MAAK,SAAAc,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,MAEnB,GACF,EA8CCC,mBA5CyB,SAAAC,GACzB,OAAOL,MAAM,qDAAD,OAC2CJ,EAD3C,4DACkGS,IAC5GlB,MAAK,SAAAc,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,MAEnB,GACF,EAqCCG,mBAnCyB,SAAAjC,GACzB,OAAO2B,MAAM,GAAD,OAAIH,EAAJ,iBAAqBxB,EAArB,oBAAmCuB,EAAnC,oBAAyDT,MACnE,SAAAc,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,MAEnB,GAEJ,EA4BCI,eA1BqB,SAAAlC,GACrB,OAAO2B,MAAM,GAAD,OACPH,EADO,iBACUxB,EADV,4BACgCuB,EADhC,oBAEVT,MAAK,SAAAc,GAEL,GADAO,QAAQC,IAAIR,GACRA,EAASC,GACX,OAAOD,EAASE,MAEnB,GACF,EAkBCO,mBAhByB,SAAArC,GACzB,OAAO2B,MAAM,GAAD,OACPH,EADO,iBACUxB,EADV,4BACgCuB,EADhC,2BAEVT,MAAK,SAAAc,GAEL,GADAO,QAAQC,IAAIR,GACRA,EAASC,GACX,OAAOD,EAASE,MAEnB,GACF,EAQCQ,eA5DqB,mCA8DvB,K","sources":["webpack://react-homework-template/./src/components/MoviesItem/MoviesItem.module.css?58c2","components/MoviesItem/MoviesItem.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","pages/Home.js","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieListItem\":\"MoviesItem_movieListItem__TPZf8\",\"movieInfo\":\"MoviesItem_movieInfo__ccfLI\"};","import { Link } from 'react-router-dom';\nimport css from './MoviesItem.module.css';\n\nconst MovieItem = ({ movie, location }) => {\n  return (\n    <li className={css.movieListItem}>\n      <Link\n        to={\n          location.path_name === '/movies'\n            ? `${movie.id}`\n            : `/movies/${movie.id}`\n        }\n        state={{ from: location }}\n      >\n        <p className={css.movieInfo}>\n          {movie.original_title}\n          <span>Raiting: {movie.vote_average}</span>\n        </p>\n      </Link>\n    </li>\n  );\n};\n\nexport default MovieItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MoviesList_movieList__8BnEE\"};","import MovieItem from 'components/MoviesItem/MoviesItem';\nimport css from './MoviesList.module.css';\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <ul className={css.movieList}>\n      {movies.map(movie => (\n        <MovieItem key={movie.id} movie={movie} location={location} />\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","import { useEffect, useState } from 'react';\n\nimport MoviesList from '../components/MoviesList/MoviesList.jsx';\nimport moviesApi from '../services/moviesApi';\nimport { useLocation } from 'react-router-dom';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n  const location = useLocation();\n\n  useEffect(() => {\n    moviesApi\n      .fetchTrendsMovies()\n      .then(data => {\n        if (data.results.length === 0) {\n          return Promise.reject(new Error(`Sorry, we have no movies.`));\n        }\n        return setMovies([...data.results]);\n      })\n      .catch(error => setError(error.message));\n  }, []);\n\n  return (\n    <>\n      <h1>Trending this week</h1>\n      <MoviesList movies={movies} location={location} />\n      {error && <div>{error}</div>}\n    </>\n  );\n};\n\nexport default Home;\n","const KEY = '844acd5d93f95171cb079356b4956807';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w200';\n\nconst fetchTrendsMovies = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/all/week?api_key=${KEY}`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n  });\n};\n\nconst fetchMoviesByQuery = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n  });\n};\n\nconst fetchMoviesDetails = id => {\n  return fetch(`${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }\n  );\n};\n\nconst fetchMovieCast = id => {\n  return fetch(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  ).then(response => {\n    console.log(response);\n    if (response.ok) {\n      return response.json();\n    }\n  });\n};\n\nconst fetchMoviesReviews = id => {\n  return fetch(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  ).then(response => {\n    console.log(response);\n    if (response.ok) {\n      return response.json();\n    }\n  });\n};\n\nconst api = {\n  fetchTrendsMovies,\n  fetchMoviesByQuery,\n  fetchMoviesDetails,\n  fetchMovieCast,\n  fetchMoviesReviews,\n  IMAGE_BASE_URL,\n};\nexport default api;\n"],"names":["movie","location","className","css","to","path_name","id","state","from","original_title","vote_average","movies","map","useState","setMovies","error","setError","useLocation","useEffect","moviesApi","then","data","results","length","Promise","reject","Error","catch","message","KEY","BASE_URL","api","fetchTrendsMovies","fetch","response","ok","json","fetchMoviesByQuery","query","fetchMoviesDetails","fetchMovieCast","console","log","fetchMoviesReviews","IMAGE_BASE_URL"],"sourceRoot":""}