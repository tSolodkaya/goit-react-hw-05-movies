{"version":3,"file":"static/js/76.e70ffb56.chunk.js","mappings":"yNACA,EAAuB,mBAAvB,EAAqD,uBAArD,EAAoF,oBAApF,EAAmH,uBAAnH,EAAyJ,2BAAzJ,EAA8L,sB,kBCmE9L,EA7Da,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,eACkBR,GACfS,MAAK,SAAAC,GACJ,OAAKA,EAKEN,EAAQM,EAAKP,MAJXQ,QAAQC,OACb,IAAIC,MAAJ,2CAIL,IACAC,OAAM,SAAAT,GAAK,OAAIC,EAASD,EAAMU,QAAnB,GACf,GAAE,CAACf,KAGF,iBAAKgB,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SACGd,GACCA,EAAKe,KAAI,SAAAC,GACP,IAAQC,EAAkDD,EAAlDC,GAAIC,EAA8CF,EAA9CE,aAAcC,EAAgCH,EAAhCG,KAAMC,EAA0BJ,EAA1BI,UAAWC,EAAeL,EAAfK,WAC3C,OACE,gBAAIR,UAAWC,EAAf,UACGI,GACC,gBACEL,UAAWC,EACXQ,IAAG,UAAKjB,EAAAA,EAAAA,gBAAL,OAAgCa,GACnCK,IAAG,UAAKJ,MAGV,gBACEG,IAAI,qEACJC,IAAI,UACJC,MAAM,QAGV,0BACE,iBAAMX,UAAWC,EAAjB,0BACCK,IAAc,SAACM,EAAA,EAAD,CAAQb,QAAQ,gBAEjC,0BACE,iBAAMC,UAAWC,EAAjB,yBACCM,IAAwB,SAACK,EAAA,EAAD,CAAQb,QAAQ,qBAE3C,0BACE,iBAAMC,UAAWC,EAAjB,0BACCO,IAA0B,SAACI,EAAA,EAAD,CAAQb,QAAQ,uBAxBbK,EA4BrC,MAEJf,IAAS,gBAAKW,UAAWC,EAAhB,SAA4BZ,MAG3C,C,sDClED,MAAyB,uB,SCWzB,EARe,SAAC,GAAiB,IAAfU,EAAc,EAAdA,QAChB,OAAO,iBAAMC,UAAWC,EAAjB,SAA8BF,GACtC,C,oBCND,IAAMc,EAAM,mCACNC,EAAW,gCAuDXC,EAAM,CACVC,kBArDwB,WACxB,OAAOC,MAAM,0DAAD,OACgDJ,IAC1DpB,MAAK,SAAAyB,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,MAEnB,GACF,EA8CCC,mBA5CyB,SAAAC,GACzB,OAAOL,MAAM,qDAAD,OAC2CJ,EAD3C,4DACkGS,IAC5G7B,MAAK,SAAAyB,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,MAEnB,GACF,EAqCCG,mBAnCyB,SAAAnB,GACzB,OAAOa,MAAM,GAAD,OAAIH,EAAJ,iBAAqBV,EAArB,oBAAmCS,EAAnC,oBAAyDpB,MACnE,SAAAyB,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,MAEnB,GAEJ,EA4BCI,eA1BqB,SAAApB,GACrB,OAAOa,MAAM,GAAD,OACPH,EADO,iBACUV,EADV,4BACgCS,EADhC,oBAEVpB,MAAK,SAAAyB,GAEL,GADAO,QAAQC,IAAIR,GACRA,EAASC,GACX,OAAOD,EAASE,MAEnB,GACF,EAkBCO,mBAhByB,SAAAvB,GACzB,OAAOa,MAAM,GAAD,OACPH,EADO,iBACUV,EADV,4BACgCS,EADhC,2BAEVpB,MAAK,SAAAyB,GAEL,GADAO,QAAQC,IAAIR,GACRA,EAASC,GACX,OAAOD,EAASE,MAEnB,GACF,EAQCQ,eA5DqB,mCA8DvB,K","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://react-homework-template/./src/components/NoInfo/NoInfo.module.css?b8b5","components/NoInfo/NoInfo.jsx","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cast\":\"Cast_cast__m5y0R\",\"castItem\":\"Cast_castItem__-Jcfe\",\"error\":\"Cast_error__hQWWB\",\"castList\":\"Cast_castList__ARoWn\",\"castSubtitle\":\"Cast_castSubtitle__5Sj6E\",\"castImg\":\"Cast_castImg__T4WbF\"};","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport moviesApi from '../../services/moviesApi';\nimport css from './Cast.module.css';\nimport NoInfo from 'components/NoInfo/NoInfo';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState(null);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    moviesApi\n      .fetchMovieCast(movieId)\n      .then(data => {\n        if (!data) {\n          return Promise.reject(\n            new Error(`Sorry, we have no casts for this movie.`)\n          );\n        }\n        return setCast(data.cast);\n      })\n      .catch(error => setError(error.message));\n  }, [movieId]);\n\n  return (\n    <div className={css.cast}>\n      <ul className={css.castList}>\n        {cast &&\n          cast.map(actor => {\n            const { id, profile_path, name, character, popularity } = actor;\n            return (\n              <li className={css.castItem} key={id}>\n                {profile_path ? (\n                  <img\n                    className={css.castImg}\n                    src={`${moviesApi.IMAGE_BASE_URL}${profile_path}`}\n                    alt={`${name}`}\n                  />\n                ) : (\n                  <img\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/0/0d/UserAvatar.svg\"\n                    alt=\"default\"\n                    width=\"60\"\n                  />\n                )}\n                <p>\n                  <span className={css.castSubtitle}>Actor name: </span>\n                  {name ? name : <NoInfo message=\"No name\" />}\n                </p>\n                <p>\n                  <span className={css.castSubtitle}>Character: </span>\n                  {character ? character : <NoInfo message=\"No character\" />}\n                </p>\n                <p>\n                  <span className={css.castSubtitle}>Popularity: </span>\n                  {popularity ? popularity : <NoInfo message=\"No popularity\" />}\n                </p>\n              </li>\n            );\n          })}\n      </ul>\n      {error && <div className={css.error}>{error}</div>}\n    </div>\n  );\n};\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"noinfo\":\"NoInfo_noinfo__L-a7y\"};","import PropTypes from 'prop-types';\n\nimport css from './NoInfo.module.css';\n\nconst NoInfo = ({ message }) => {\n  return <span className={css.noinfo}>{message}</span>;\n};\n\nNoInfo.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default NoInfo;\n","const KEY = '844acd5d93f95171cb079356b4956807';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w200';\n\nconst fetchTrendsMovies = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/all/week?api_key=${KEY}`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n  });\n};\n\nconst fetchMoviesByQuery = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n  });\n};\n\nconst fetchMoviesDetails = id => {\n  return fetch(`${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }\n  );\n};\n\nconst fetchMovieCast = id => {\n  return fetch(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  ).then(response => {\n    console.log(response);\n    if (response.ok) {\n      return response.json();\n    }\n  });\n};\n\nconst fetchMoviesReviews = id => {\n  return fetch(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  ).then(response => {\n    console.log(response);\n    if (response.ok) {\n      return response.json();\n    }\n  });\n};\n\nconst api = {\n  fetchTrendsMovies,\n  fetchMoviesByQuery,\n  fetchMoviesDetails,\n  fetchMovieCast,\n  fetchMoviesReviews,\n  IMAGE_BASE_URL,\n};\nexport default api;\n"],"names":["movieId","useParams","useState","cast","setCast","error","setError","useEffect","moviesApi","then","data","Promise","reject","Error","catch","message","className","css","map","actor","id","profile_path","name","character","popularity","src","alt","width","NoInfo","KEY","BASE_URL","api","fetchTrendsMovies","fetch","response","ok","json","fetchMoviesByQuery","query","fetchMoviesDetails","fetchMovieCast","console","log","fetchMoviesReviews","IMAGE_BASE_URL"],"sourceRoot":""}