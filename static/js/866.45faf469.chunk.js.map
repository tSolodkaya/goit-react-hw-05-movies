{"version":3,"file":"static/js/866.45faf469.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/MoviesItem/MoviesItem.module.css?58c2","components/MoviesItem/MoviesItem.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","components/Notification/Notification.jsx","pages/Movies.js","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieListItem\":\"MoviesItem_movieListItem__TPZf8\",\"movieInfo\":\"MoviesItem_movieInfo__ccfLI\"};","import { Link } from 'react-router-dom';\nimport css from './MoviesItem.module.css';\n\nconst MovieItem = ({ movie, location }) => {\n  return (\n    <li className={css.movieListItem}>\n      <Link to={`${movie.id}`} state={{ from: location }}>\n        <p className={css.movieInfo}>\n          {movie.original_title}\n          <span>Raiting: {movie.vote_average}</span>\n        </p>\n      </Link>\n    </li>\n  );\n};\n\nexport default MovieItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"movieList\":\"MoviesList_movieList__8BnEE\"};","import MovieItem from 'components/MoviesItem/MoviesItem';\nimport css from './MoviesList.module.css';\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <ul className={css.movieList}>\n      {movies.map(movie => (\n        <MovieItem key={movie.id} movie={movie} location={location} />\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchForm_form__o80os\",\"inputSearch\":\"SearchForm_inputSearch__9idWV\",\"searchBtn\":\"SearchForm_searchBtn__rp2a7\"};","import { useSearchParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport css from './SearchForm.module.css';\n\nconst SearchForm = ({ onSubmit }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const name = searchParams.get('name') ?? '';\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (name.trim() === '') {\n      setSearchParams({});\n      return Notiflix.Notify.warning(\n        'Please, type what images do you want to find =)'\n      );\n    }\n    onSubmit(searchParams);\n  };\n\n  const updateQueryString = event => {\n    if (event.target.value === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ name: event.target.value });\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <input\n        className={css.inputSearch}\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={name}\n        onChange={updateQueryString}\n      />\n      <button className={css.searchBtn} type=\"submit\">\n        Serach\n      </button>\n    </form>\n  );\n};\n\nexport default SearchForm;\n","import Notiflix from 'notiflix';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message, type }) => {\n  return Notiflix.Notify[type](message);\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport Notification from 'components/Notification/Notification';\nimport moviesApi from '../services/moviesApi';\n\nconst Movies = () => {\n  const [name, setName] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState('');\n\n  const location = useLocation();\n\n  const handleFormSubmit = searchParams => {\n    setName(searchParams.get('name'));\n  };\n\n  useEffect(() => {\n    moviesApi\n      .fetchMoviesByQuery(name)\n      .then(data => {\n        if (data.results === 0) {\n          return Promise.reject(new Error(`Sorry, we have no movies.`));\n        }\n        return setMovies([...data.results]);\n      })\n      .catch(error => setError(error.message));\n  }, [name]);\n\n  return (\n    <>\n      <SearchForm onSubmit={handleFormSubmit} />\n      <MoviesList movies={movies} location={location} />\n      {error && <Notification message={error} type=\"failure\" />}\n    </>\n  );\n};\n\nexport default Movies;\n","const KEY = '844acd5d93f95171cb079356b4956807';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w200';\n\nconst fetchTrendsMovies = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/all/week?api_key=${KEY}`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n  });\n};\n\nconst fetchMoviesByQuery = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n  });\n};\n\nconst fetchMoviesDetails = id => {\n  return fetch(`${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }\n  );\n};\n\nconst fetchMovieCast = id => {\n  return fetch(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  ).then(response => {\n    console.log(response);\n    if (response.ok) {\n      return response.json();\n    }\n  });\n};\n\nconst fetchMoviesReviews = id => {\n  return fetch(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  ).then(response => {\n    console.log(response);\n    if (response.ok) {\n      return response.json();\n    }\n  });\n};\n\nconst api = {\n  fetchTrendsMovies,\n  fetchMoviesByQuery,\n  fetchMoviesDetails,\n  fetchMovieCast,\n  fetchMoviesReviews,\n  IMAGE_BASE_URL,\n};\nexport default api;\n"],"names":["movie","location","className","css","to","id","state","from","original_title","vote_average","movies","map","onSubmit","useSearchParams","searchParams","setSearchParams","name","get","event","preventDefault","trim","Notiflix","type","autoComplete","autoFocus","placeholder","value","onChange","target","Notification","message","propTypes","PropTypes","useState","setName","setMovies","error","setError","useLocation","useEffect","moviesApi","then","data","results","Promise","reject","Error","catch","MoviesList","KEY","BASE_URL","api","fetchTrendsMovies","fetch","response","ok","json","fetchMoviesByQuery","query","fetchMoviesDetails","fetchMovieCast","console","log","fetchMoviesReviews","IMAGE_BASE_URL"],"sourceRoot":""}