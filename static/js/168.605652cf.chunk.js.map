{"version":3,"file":"static/js/168.605652cf.chunk.js","mappings":"sKACA,MAAyB,uB,SCWzB,EARe,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QAChB,OAAO,iBAAMC,UAAWC,EAAjB,SAA8BF,GACtC,C,kGCLD,EAA0B,yBAA1B,EAAiE,6BAAjE,EAA2G,4BAA3G,EAA+I,uBAA/I,EAAkL,2BAAlL,EAA8N,gC,2BC+D9N,EAzDgB,WACd,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,mBACsBR,GACnBS,MAAK,SAAAC,GACJ,OAAKA,GAAgC,IAAxBA,EAAKC,QAAQC,OAKnBR,EAAWM,EAAKC,SAJdE,QAAQC,OACb,IAAIC,MAAJ,6CAIL,IACAC,OAAM,SAAAX,GAAK,OAAIC,EAASD,EAAMR,QAAnB,GACf,GAAE,CAACG,KAGF,iBAAKF,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SACGI,GACCA,EAAQc,KAAI,SAAAC,GACV,IAAQC,EAAoDD,EAApDC,GAAIC,EAAgDF,EAAhDE,OAAQC,EAAwCH,EAAxCG,eAAgBC,EAAwBJ,EAAxBI,QAASC,EAAeL,EAAfK,WAC7C,OACE,gBAAIzB,UAAWC,EAAf,UACGqB,GAAS,wBAAKA,KAAe,SAACI,EAAA,EAAD,CAAQ3B,QAAQ,aAC7CwB,EAAeI,YAAYC,SAAS,SACnC,gBACE5B,UAAWC,EACX4B,IAAI,qEACJC,IAAKR,KAGP,gBACEO,IAAG,UAAKnB,EAAAA,EAAAA,gBAAL,OAAgCa,EAAeI,aAClDG,IAAI,UACJC,MAAM,OAGTP,IAAW,uBAAIA,IACfC,IACC,0BACE,iBAAMzB,UAAWC,EAAjB,0BACCwB,OAnB6BJ,EAwBvC,MAEJd,IAAS,gBAAKP,UAAWC,EAAhB,SAA4BM,MAG3C,C,oBC9DD,IAAMyB,EAAM,mCACNC,EAAW,gCAuDXC,EAAM,CACVC,kBArDwB,WACxB,OAAOC,MAAM,0DAAD,OACgDJ,IAC1DrB,MAAK,SAAA0B,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,MAEnB,GACF,EA8CCC,mBA5CyB,SAAAC,GACzB,OAAOL,MAAM,qDAAD,OAC2CJ,EAD3C,4DACkGS,IAC5G9B,MAAK,SAAA0B,GACL,GAAIA,EAASC,GACX,OAAOD,EAASE,MAEnB,GACF,EAqCCG,mBAnCyB,SAAArB,GACzB,OAAOe,MAAM,GAAD,OAAIH,EAAJ,iBAAqBZ,EAArB,oBAAmCW,EAAnC,oBAAyDrB,MACnE,SAAA0B,GACE,GAAIA,EAASC,GACX,OAAOD,EAASE,MAEnB,GAEJ,EA4BCI,eA1BqB,SAAAtB,GACrB,OAAOe,MAAM,GAAD,OACPH,EADO,iBACUZ,EADV,4BACgCW,EADhC,oBAEVrB,MAAK,SAAA0B,GAEL,GADAO,QAAQC,IAAIR,GACRA,EAASC,GACX,OAAOD,EAASE,MAEnB,GACF,EAkBCO,mBAhByB,SAAAzB,GACzB,OAAOe,MAAM,GAAD,OACPH,EADO,iBACUZ,EADV,4BACgCW,EADhC,2BAEVrB,MAAK,SAAA0B,GAEL,GADAO,QAAQC,IAAIR,GACRA,EAASC,GACX,OAAOD,EAASE,MAEnB,GACF,EAQCQ,eA5DqB,mCA8DvB,K","sources":["webpack://react-homework-template/./src/components/NoInfo/NoInfo.module.css?b8b5","components/NoInfo/NoInfo.jsx","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","services/moviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"noinfo\":\"NoInfo_noinfo__L-a7y\"};","import PropTypes from 'prop-types';\n\nimport css from './NoInfo.module.css';\n\nconst NoInfo = ({ message }) => {\n  return <span className={css.noinfo}>{message}</span>;\n};\n\nNoInfo.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default NoInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"reviews\":\"Reviews_reviews__n3fdK\",\"reviewsList\":\"Reviews_reviewsList__hDAQA\",\"reviewItem\":\"Reviews_reviewItem__ax7Fo\",\"error\":\"Reviews_error__urRRw\",\"reviewImg\":\"Reviews_reviewImg__yYWpn\",\"reviewSubtitle\":\"Reviews_reviewSubtitle__CYgai\"};","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport css from './Reviews.module.css';\n\nimport moviesApi from '../../services/moviesApi';\nimport NoInfo from 'components/NoInfo/NoInfo';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    moviesApi\n      .fetchMoviesReviews(movieId)\n      .then(data => {\n        if (!data || data.results.length === 0) {\n          return Promise.reject(\n            new Error(`Sorry, we have no reviews for this movie.`)\n          );\n        }\n        return setReviews(data.results);\n      })\n      .catch(error => setError(error.message));\n  }, [movieId]);\n\n  return (\n    <div className={css.reviews}>\n      <ul className={css.reviewsList}>\n        {reviews &&\n          reviews.map(review => {\n            const { id, author, author_details, content, created_at } = review;\n            return (\n              <li className={css.reviewItem} key={id}>\n                {author ? <h3>{author}</h3> : <NoInfo message=\"Unonimus\" />}\n                {author_details.avatar_path.includes('http') ? (\n                  <img\n                    className={css.reviewImg}\n                    src=\"https://upload.wikimedia.org/wikipedia/commons/0/0d/UserAvatar.svg\"\n                    alt={author}\n                  />\n                ) : (\n                  <img\n                    src={`${moviesApi.IMAGE_BASE_URL}${author_details.avatar_path}`}\n                    alt=\"default\"\n                    width=\"60\"\n                  />\n                )}\n                {content && <p>{content}</p>}\n                {created_at && (\n                  <p>\n                    <span className={css.reviewSubtitle}>Created at: </span>\n                    {created_at}\n                  </p>\n                )}\n              </li>\n            );\n          })}\n      </ul>\n      {error && <div className={css.error}>{error}</div>}\n    </div>\n  );\n};\n\nexport default Reviews;\n","const KEY = '844acd5d93f95171cb079356b4956807';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst IMAGE_BASE_URL = 'https://image.tmdb.org/t/p/w200';\n\nconst fetchTrendsMovies = () => {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/all/week?api_key=${KEY}`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n  });\n};\n\nconst fetchMoviesByQuery = query => {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  ).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n  });\n};\n\nconst fetchMoviesDetails = id => {\n  return fetch(`${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`).then(\n    response => {\n      if (response.ok) {\n        return response.json();\n      }\n    }\n  );\n};\n\nconst fetchMovieCast = id => {\n  return fetch(\n    `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n  ).then(response => {\n    console.log(response);\n    if (response.ok) {\n      return response.json();\n    }\n  });\n};\n\nconst fetchMoviesReviews = id => {\n  return fetch(\n    `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  ).then(response => {\n    console.log(response);\n    if (response.ok) {\n      return response.json();\n    }\n  });\n};\n\nconst api = {\n  fetchTrendsMovies,\n  fetchMoviesByQuery,\n  fetchMoviesDetails,\n  fetchMovieCast,\n  fetchMoviesReviews,\n  IMAGE_BASE_URL,\n};\nexport default api;\n"],"names":["message","className","css","movieId","useParams","useState","reviews","setReviews","error","setError","useEffect","moviesApi","then","data","results","length","Promise","reject","Error","catch","map","review","id","author","author_details","content","created_at","NoInfo","avatar_path","includes","src","alt","width","KEY","BASE_URL","api","fetchTrendsMovies","fetch","response","ok","json","fetchMoviesByQuery","query","fetchMoviesDetails","fetchMovieCast","console","log","fetchMoviesReviews","IMAGE_BASE_URL"],"sourceRoot":""}